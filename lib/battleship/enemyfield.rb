require "matrix"

class Enemy_Field
  def initialize
    fields = [
      [[2,0,0,0,0,0,0,0,0,0],
       [2,0,0,2,2,2,0,0,0,2],
       [2,0,0,0,0,0,0,2,0,2],
       [2,0,0,0,0,0,0,2,0,0],
       [0,0,0,2,2,2,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,2,0,0],
       [0,0,0,0,0,2,0,2,0,2],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,2,0]],
      [[0,0,0,0,0,0,0,0,0,0],
       [2,0,0,2,2,2,0,0,0,0],
       [2,0,0,0,0,0,0,2,0,0],
       [2,0,0,0,0,0,0,2,0,0],
       [2,0,0,2,2,2,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,2,0,0,0,0,2,0,0],
       [0,0,2,0,0,2,0,2,0,2],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,2,0]],
      [[0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,2,2,0,0,0,2],
       [2,0,0,0,0,0,0,0,0,2],
       [2,0,0,0,0,0,0,0,0,0],
       [2,0,0,2,2,2,0,0,0,0],
       [2,0,0,0,0,0,0,0,0,0],
       [0,0,2,0,0,0,0,2,0,0],
       [0,0,2,0,0,2,0,2,0,2],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,2,0]],
      [[0,2,0,0,2,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,2,2,0,2,0,2],
       [2,0,0,0,0,0,0,2,0,2],
       [2,0,0,2,2,2,0,0,0,0],
       [2,0,0,0,0,0,0,0,0,2],
       [2,0,2,0,0,0,0,0,0,0],
       [0,0,2,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,2,0]],
      [[0,2,0,0,2,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,2,2,2,0,2,0,2],
       [0,0,0,0,0,0,0,2,0,2],
       [0,0,2,2,2,2,0,0,0,0],
       [2,0,0,0,0,0,0,0,0,2],
       [2,0,0,0,0,0,0,0,0,0],
       [2,0,0,2,2,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,2,0]],
      [[0,2,0,0,2,0,0,0,0,2],
       [0,0,0,0,0,0,0,0,0,2],
       [0,2,2,2,0,0,0,2,0,0],
       [0,0,0,0,0,0,0,2,0,0],
       [0,0,0,2,2,2,0,0,0,0],
       [0,2,0,0,0,0,0,0,0,2],
       [0,2,0,0,0,0,0,0,0,0],
       [0,2,0,0,2,2,0,0,0,0],
       [0,2,0,0,0,0,0,0,0,0],
       [0,0,0,0,2,0,0,0,0,0]],
      [[0,0,0,2,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,0,0],
       [2,2,0,0,0,0,0,2,0,0],
       [0,0,0,0,0,0,0,2,0,0],
       [0,2,0,0,0,0,0,0,0,2],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,2,2,2,0,0,2],
       [2,2,0,0,0,0,0,0,0,0],
       [0,0,0,0,2,0,2,2,2,2]],
      [[2,0,0,2,0,0,0,0,0,0],
       [0,0,0,2,0,0,2,0,0,0],
       [0,0,0,2,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,2,2,0],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,2,2,0,0,0,0],
       [2,0,0,0,0,0,0,0,0,2],
       [0,0,0,0,2,2,2,0,0,2],
       [2,2,0,0,0,0,0,0,0,2],
       [0,0,0,0,0,0,2,0,0,2]],
      [[0,0,0,2,0,0,0,0,0,0],
       [0,0,0,2,0,0,0,0,0,0],
       [0,0,0,2,0,2,0,0,0,0],
       [0,2,0,0,0,0,0,2,0,0],
       [0,2,0,0,0,0,0,2,0,0],
       [0,2,0,2,0,0,0,0,0,2],
       [0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,2,2,0,0,0,2],
       [2,0,0,0,0,0,0,0,0,0],
       [2,0,0,0,0,0,2,2,2,2]]
    ]
    f = fields.sample
    @field = Matrix[f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],f[8],f[9]]
    @field.transpose if rand(10) % 2 == 0
    @available_ships = [4, 3, 2, 1]
  end

  def field_getter
    @field
  end

  def field_setter(x,y,v)
    @field[x,y] = v
  end

  def show_field
    for i in 0..9 do
      for j in 0..9 do
        print " — ".unicode_normalize if @field[i,j] == 0
        print " ☓ ".unicode_normalize if @field[i,j] == 1
        print " ☐ ".unicode_normalize if @field[i,j] == 2
      end
      puts " "
    end
  end

  #def attack(x,y)

  #  if @field[x,y]==2
  #    @field[x,y]=0

  #  else
  #    return "Unfortunately you missed"
  #end

end
class Enemy
  def initialize (f)
    @field = Enemy_Field.new
    @user_field = f
    @ships_count = 20
  end
  def amount_ships
    @ships_count
  end
  def attack
    x=-1
    y=-1
    while true
      x = rand(10)
      y= rand(10)
      if  @user_field.field_getter[x,y]>=0
        break
      end
    end
    if @user_field.field_getter[x,y]==2
      @user_field.field_setter(x,y, -2)
      @ships_count-=1
      puts 'attack was successful'
    else
      @user_field.field_setter(x,y, -1)
    end
  end
end
